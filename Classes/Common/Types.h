#ifndef  _TYPES_H_
#define  _TYPES_H_

#include "cocos2d.h"

USING_NS_CC;

enum SushiType {
	SUSHI_TYPE_NORMAL = 0,
	SUSHI_TYPE_4_HORIZONTAL_LINE,
	SUSHI_TYPE_4_VERTICAL_LINE,
	SUSHI_TYPE_5_LINE,
	SUSHI_TYPE_5_CROSS,
};


enum GridType {
	GRID_TYPE_NONE = 0,
	GIRD_TYPE_NORMAL,  // 1
	GRID_TYPE_JELLY,  // 2
	GRID_TYPE_DOUBLE_JELLY,  // 3
	GRID_TYPE_CREAM,  // 4
	GRID_TYPE_DOUBLE_CREAM,  // 5
};

enum DataBaseDataType {
	DATA_TYPE_STRING = 0,
	DATA_TYPE_INT,  // 1
};

enum TargetType {
	TARGET_TYPE_SCORE = 0,
	TARGET_TYPE_JELLY,
	TARGET_TYPE_DOUBLE_JELLY,
	TARGET_TYPE_CREAM,
	TARGET_TYPE_DOUBLE_CREAM,
	TARGET_TYPE_SUSHI_1,
	TARGET_TYPE_SUSHI_2,
	TARGET_TYPE_SUSHI_3,
	TARGET_TYPE_SUSHI_4,
	TARGET_TYPE_SUSHI_5,
	TARGET_TYPE_SUSHI_6,
};

enum TipsLayerType {
	TIPS_TYPE_TARGET = 0,
	TIPS_TYPE_SUCCESSFUL,
	TIPS_TYPE_FAIL,
	TIPS_TYPE_TARGET_COMPLETE,
	TIPS_TYPE_CRUSH_BEGIN,
};

enum CrushMode
{
	CRUSH_MODE_NORMAL = 0,
	CRUSH_MODE_REMOVE_SPECIAL_SUSHI,
	CRUSH_MODE_GENERATE_SPECIAL_SUSHI,
};

typedef std::map<TargetType, int> MapTarget;

#endif // _TYPES_H_

